[[questions]]
question = "Which of the following address ranges are private"
answers = ["172.16.0.0/12", "10.0.0.0/8", "192.168.0.0/16"]
alternatives = [
    "1.1.1.0/30", 
    "127.0.0.0/24", 
    "169.254.0.0/16", 
    "193.168.255.0/24",
]
hint = "There are three private address ranges."

[[questions]]
question = "What's the name of the list-like data structure in TOML"
answers = ["Array"]
alternatives = ["List", "Sequence", "Set"]

[[questions]]
question = "How can you run a Python script named quiz.py"
answers = ["python quiz.py", "python -m quiz"]
alternatives = ["python quiz", "python -m quiz.py"]

[[questions]]
question = "How can you run a Python script named quiz.py"
answers = ["python quiz.py", "python -m quiz"]
alternatives = ["python quiz", "python -m quiz.py"]
hint = "One option uses the filename, and the other uses the module name."

[[questions]]
question = "What's a PEP"
answers = ["A Python Enhancement Proposal"]
alternatives = [
    "A Pretty Exciting Policy",
    "A Preciously Evolved Python",
    "A Potentially Epic Prize",
    ]
hint = "PEPs are used to evolve Python."
explanation = """
    Python Enhancement Proposals (PEPs) are design documents that provide
    information to the Python community. PEPs are used to propose new features
    for the Python language, to collect community input on an issue, and to
    document design decisions made about the language.
"""
[[questions]]
question = "How can you add a docstring to a function"
answers = [
    "By writing a string literal as the first statement in the function",
    "By assigning a string to the function's .__doc__ attribute",
]
alternatives = [
    "By using the built-in @docstring decorator",
    "By returning a string from the function",
]
hint = "They're parsed from your code and stored on the function object."
explanation = """
    Docstrings document functions and other Python objects. A docstring is a
    string literal that occurs as the first statement in a module, function,
    class, or method definition. Such a docstring becomes the .__doc__ special
    attribute of that object. See PEP 257 for more information.

    There is no built-in @docstring decorator. Many functions naturally return
    strings. Such a feature can therefore not be used for docstrings.
"""
